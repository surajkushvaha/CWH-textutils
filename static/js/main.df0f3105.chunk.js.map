{"version":3,"sources":["components/navbar.js","components/textutils.js","components/alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","id","href","type","onClick","changeMode","TextUtils","useState","text","setText","rows","value","onChange","e","target","toUpperCase","showAlert","disabled","length","toLowerCase","navigator","clipboard","writeText","newtext","split","join","filter","element","Alert","style","height","alert","role","msg","App","mxmode","setmxode","setAlert","Mode","mkstr","$","removeClass","addClass","message","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df0f3105.chunk.js","sourcesContent":["import React from 'react';\r\nimport './navbar.css'\r\nexport default function Navbar(props){\r\n    return (\r\n        <section>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\" id=\"navbaar\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {/* <!-- <img\r\n            src=\"/docs/4.6/assets/brand/bootstrap-solid.svg\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"\"\r\n          /> --> */}\r\n          TextUtil\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\"\r\n                >Home <span className=\"sr-only\">(current)</span></a\r\n              >\r\n            </li>\r\n\r\n          </ul>\r\n            <div className=\"custom-control custom-switch d-flex\">\r\n\r\n                <div className=\"theme mx-2 bg-primary rounded\" onClick={()=>{props.changeMode('primary')}}></div>\r\n                <div className=\"theme mx-2 bg-info rounded\" onClick={()=>{props.changeMode('info')}}></div>\r\n                <div className=\"theme mx-2 bg-danger rounded\" onClick={()=>{props.changeMode('danger')}}></div>\r\n                <div className=\"theme mx-2 bg-warning rounded\" onClick={()=>{props.changeMode('warning')}}></div>\r\n                <div className=\"theme mx-2 bg-dark rounded\" onClick={()=>{props.changeMode('dark')}}></div>\r\n                <div className=\"theme mx-2 bg-light rounded\" onClick={()=>{props.changeMode('light')}}></div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n      </nav>\r\n    </section>\r\n    );\r\n    };","import React, { useState } from 'react';\r\nimport './textutils.css';\r\n\r\nexport default function TextUtils(props){\r\n    const convertUpper=()=>{\r\n        let newtext=text;\r\n        setText(newtext.toUpperCase());\r\n                props.showAlert(\"Converted to uppercase!\");\r\n\r\n    }\r\n    const convertLower=()=>{\r\n        let newtext=text;\r\n        setText(newtext.toLowerCase());\r\n        props.showAlert(\"Converted to lowerccase!\");\r\n\r\n    }\r\n    const copyClipboard=()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"copied successfully!\");\r\n\r\n    }\r\n    const removeSpace=()=>{\r\n        let newtext=text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"));\r\n        props.showAlert(\"extra spaces removed!\");\r\n\r\n    }\r\n    const clearText=()=>{\r\n        setText('');\r\n        props.showAlert(\"text cleared!\");\r\n\r\n    }\r\n    const [text,setText]=useState('');\r\n    return (\r\n\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>TextUtils</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control tex\" id=\"myBox\" rows=\"8\" value={text} onChange={(e)=>{setText(e.target.value)}}></textarea>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\">\r\n            <button className=\"btn mx-1 my-1 btn-success\"  onClick={convertUpper} disabled={text.length===0}>Convert to Uppercase</button>\r\n            <button className=\"btn mx-1 my-1 btn-success\" onClick={convertLower} disabled={text.length===0}>Convert to Lowercase</button>\r\n            <button className=\"btn mx-1 my-1 btn-success\" onClick={copyClipboard} disabled={text.length===0}>Copy to clipboard</button>\r\n            <button className=\"btn mx-1 my-1 btn-success\" onClick={removeSpace} disabled={text.length===0}>Remove Extra Space</button>\r\n            <button className=\"btn mx-1 my-1 btn-success\" onClick={clearText} disabled={text.length===0}>Clear Text</button>\r\n        </div>\r\n\r\n        <div className=\"container tex2 my-3\">\r\n            <h2 className=\"my-2\">About your text</h2>\r\n            <p><strong>Words : </strong> {text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}  </p>\r\n            <p><strong>Characters : </strong> {text.length} </p>\r\n            <p><strong>Read time : </strong> {0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length}</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nexport default function Alert(props){\r\n\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>Notification</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}","// import logo from './logo.svg';\nimport './App.css';\nimport React,{ useState }  from 'react'\nimport Navbar from './components/navbar';\nimport TextUtils from './components/textutils';\n\nimport $ from 'jquery';\nimport Alert from './components/alert';\nfunction App() {\n    const [mxmode, setmxode] = useState('primary');\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: mxmode\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n    }\n\n\n    const removeClassBody=()=>{\n      $('body').removeClass('bg-primary');\n      $('body').removeClass('bg-danger');\n      $('body').removeClass('bg-info');\n      $('body').removeClass('bg-dark');\n      $('body').removeClass('bg-light');\n      $('body').removeClass('bg-warning');\n      $('nav').removeClass('bg-primary');\n      $('nav').removeClass('bg-danger');\n      $('nav').removeClass('bg-info');\n      $('nav').removeClass('bg-dark');\n      $('nav').removeClass('bg-light');\n      $('nav').removeClass('bg-warning');\n      $('nav').removeClass('navbar-dark');\n    }\n  const changeMode=(Mode)=>{\n    setmxode(Mode);\n    let mkstr= 'bg-'+Mode;\n    removeClassBody();\n    if(Mode==='light'){\n        $('nav').addClass('navbar-light');\n        $('body').addClass('text-dark')\n\n    }else{\n        $('nav').addClass('navbar-dark');\n        $('body').removeClass('text-dark').addClass('text-white');\n    }\n\n    $('body').addClass(mkstr);\n    $('nav').addClass(mkstr);\n\n\n  }\n  return (\n      <div className=\"App\">\n        <Navbar changeMode={changeMode}/>\n        <Alert alert={alert} />\n        <TextUtils showAlert={showAlert} />\n      </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}